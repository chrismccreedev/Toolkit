#pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"
           
            struct v2f {
                float4 pos : POSITION;
                float2 uv;
            };
       
            uniform samplerRECT _MainTex;
            uniform float4 _MainTex_TexelSize;
            v2f vert (appdata_img v)
            {
                v2f o;
                o.pos = mul (glstate.matrix.mvp, v.vertex);
                o.uv = MultiplyUV( glstate.matrix.texture[0], v.texcoord );
                return o;
            }
           
            float4 frag( v2f i ) : COLOR
            {
                float Height = textureRect( _MainTex, i.uv ).x;
                float HeightU = textureRect( _MainTex, i.uv + vec2(_MainTex_TexelSize.x, 0.0) ).x;
                float HeightV = textureRect( _MainTex, i.uv + vec2(0.0, _MainTex_TexelSize.y) ).x;
               
                float3 tangent = float3( HeightU-Height, 0.0, 0.0 );
                float3 biTangent = float3( 0.0, HeightV - Height, 0.0 );
                float3 normal = float3(HeightU-Height, HeightV - Height, 0.1);
                normal = normalize( normal );
                return float4( ( (normal/2.0) + 0.5), 1.0 );                
            }